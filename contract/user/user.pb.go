// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.20.3
// source: contract/user/user.proto

package user

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	mi := &file_contract_user_user_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_contract_user_user_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_contract_user_user_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RegisterRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRes) Reset() {
	*x = RegisterRes{}
	mi := &file_contract_user_user_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRes) ProtoMessage() {}

func (x *RegisterRes) ProtoReflect() protoreflect.Message {
	mi := &file_contract_user_user_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRes.ProtoReflect.Descriptor instead.
func (*RegisterRes) Descriptor() ([]byte, []int) {
	return file_contract_user_user_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterRes) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RegisterRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_contract_user_user_proto protoreflect.FileDescriptor

const file_contract_user_user_proto_rawDesc = "" +
	"\n" +
	"\x18contract/user/user.proto\x12\x04user\"!\n" +
	"\vRegisterReq\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"1\n" +
	"\vRegisterRes\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name2:\n" +
	"\x04User\x122\n" +
	"\bRegister\x12\x11.user.RegisterReq\x1a\x11.user.RegisterRes\"\x00B,Z*github.com/Gong-Yang/g-micor/contract/userb\x06proto3"

var (
	file_contract_user_user_proto_rawDescOnce sync.Once
	file_contract_user_user_proto_rawDescData []byte
)

func file_contract_user_user_proto_rawDescGZIP() []byte {
	file_contract_user_user_proto_rawDescOnce.Do(func() {
		file_contract_user_user_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_contract_user_user_proto_rawDesc), len(file_contract_user_user_proto_rawDesc)))
	})
	return file_contract_user_user_proto_rawDescData
}

var file_contract_user_user_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_contract_user_user_proto_goTypes = []any{
	(*RegisterReq)(nil), // 0: user.RegisterReq
	(*RegisterRes)(nil), // 1: user.RegisterRes
}
var file_contract_user_user_proto_depIdxs = []int32{
	0, // 0: user.User.Register:input_type -> user.RegisterReq
	1, // 1: user.User.Register:output_type -> user.RegisterRes
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_contract_user_user_proto_init() }
func file_contract_user_user_proto_init() {
	if File_contract_user_user_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_contract_user_user_proto_rawDesc), len(file_contract_user_user_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contract_user_user_proto_goTypes,
		DependencyIndexes: file_contract_user_user_proto_depIdxs,
		MessageInfos:      file_contract_user_user_proto_msgTypes,
	}.Build()
	File_contract_user_user_proto = out.File
	file_contract_user_user_proto_goTypes = nil
	file_contract_user_user_proto_depIdxs = nil
}
